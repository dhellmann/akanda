// Generated by CoffeeScript 1.3.3
(function() {
  var AkandaAPI, FirewallAPI, RESTAPI, SystemAPI, baseURL, root,
    __hasProp = {}.hasOwnProperty,
    __extends = function(child, parent) { for (var key in parent) { if (__hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; };

  root = typeof global !== "undefined" && global !== null ? global : window;

  AkandaAPI = (function() {

    function AkandaAPI(baseURL) {
      this.baseURL = baseURL;
    }

    AkandaAPI.prototype.system = new SystemAPI(AkandaAPI.baseURL);

    AkandaAPI.prototype.firewall = new FirewallAPI(AkandaAPI.baseURL);

    return AkandaAPI;

  })();

  baseURL = "http://localhost";

  root.akanda = new AkandaAPI(baseURL);

  root = typeof global !== "undefined" && global !== null ? global : window;

  RESTAPI = (function() {

    function RESTAPI(baseURL) {
      this.baseURL = baseURL;
    }

    RESTAPI.prototype.get = function(path) {
      var url;
      url = this.baseURL + path;
      return jQuery.ajax({
        url: url,
        type: 'GET'
      });
    };

    return RESTAPI;

  })();

  root.RESTAPI = RESTAPI;

  root = typeof global !== "undefined" && global !== null ? global : window;

  FirewallAPI = (function(_super) {

    __extends(FirewallAPI, _super);

    function FirewallAPI() {
      return FirewallAPI.__super__.constructor.apply(this, arguments);
    }

    FirewallAPI.prototype.getRules = function() {};

    return FirewallAPI;

  })(RESTAPI);

  root.FirewallAPI = FirewallAPI;

  root = typeof global !== "undefined" && global !== null ? global : window;

  SystemAPI = (function(_super) {

    __extends(SystemAPI, _super);

    function SystemAPI() {
      return SystemAPI.__super__.constructor.apply(this, arguments);
    }

    SystemAPI.prototype.getInterfaces = function() {};

    SystemAPI.prototype.getInterface = function(iface) {};

    return SystemAPI;

  })(RESTAPI);

  root.SystemAPI = SystemAPI;

}).call(this);
